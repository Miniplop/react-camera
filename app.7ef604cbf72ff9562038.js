webpackJsonp([0],{295:function(e,n,t){var a=t(1),r=t(165);r.__esModule&&(r=r.default),e.exports=a.createClass({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:t(634)}},componentWillMount:function(){},render:function(){return a.createElement(r,Object.assign({},this.props,{content:this.state.content}))}})},296:function(e,n){},297:function(e,n){},298:function(e,n){},300:function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}var r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},o=t(1),c=a(o),i=t(74),s=a(i),u=t(299),p=a(u),l=t(294);t(297),t(296),t(298);var m={},d=[{path:"/",title:"Introduction",component:t(295)}];s.default.render(c.default.createElement("div",null,c.default.createElement(p.default,{href:"https://github.com/undefined/react-camera",bannerColor:"#fff",octoColor:"#000",width:80,height:80,direction:"right"}),c.default.createElement(l.Catalog,{imports:m,pages:d,specimens:{javascript:function(e){return c.default.createElement(l.CodeSpecimen,r({},e,{lang:"javascript"}))},js:function(e){return c.default.createElement(l.CodeSpecimen,r({},e,{lang:"javascript"}))},jsx:function(e){return c.default.createElement(l.ReactSpecimen,e)}},title:"react-camera v0.1.3"})),document.getElementById("app"))},634:function(e,n){e.exports="# React Camera [![Travis status build](https://travis-ci.org/Miniplop/react-camera.svg?branch=master)](https://travis-ci.org/Miniplop/react-camera/) [![npm version](https://badge.fury.io/js/react-camera.svg)](https://badge.fury.io/js/react-camera)\n\nThe comprehensive camera module for React. Including photographs! (videos, and barcode scanning coming soon)\n\n## Getting started\n\n`npm install react-camera`\n\nor\n\n`yarn add react-camera`\n\n## Usage\n\n```\nimport React, { Component } from 'react';\nimport Camera from 'react-camera';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.takePicture = this.takePicture.bind(this);\n  }\n\n  takePicture() {\n    this.camera.capture()\n    .then(blob => {\n      this.img.src = URL.createObjectURL(blob);\n      this.img.onload = () => { URL.revokeObjectURL(this.src); }\n    })\n  }\n\n  render() {\n    return (\n      <div style={style.container}>\n        <Camera\n          style={style.preview}\n          ref={(cam) => {\n            this.camera = cam;\n          }}\n        >\n          <div style={style.captureContainer} onClick={this.takePicture}>\n            <div style={style.captureButton} />\n          </div>\n        </Camera>\n        <img\n          style={style.captureImage}\n          ref={(img) => {\n            this.img = img;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst style = {\n  preview: {\n    position: 'relative',\n  },\n  captureContainer: {\n    display: 'flex',\n    position: 'absolute',\n    justifyContent: 'center',\n    zIndex: 1,\n    bottom: 0,\n    width: '100%'\n  },\n  captureButton: {\n    backgroundColor: '#fff',\n    borderRadius: '50%',\n    height: 56,\n    width: 56,\n    color: '#000',\n    margin: 20\n  },\n  captureImage: {\n    width: '100%',\n  }\n};\n```\n\n## Component instance methods\n\nYou can access component methods by adding a ref (ie. ref=\"camera\") prop to your <Camera> element, then you can use this.refs.camera.capture(cb), etc. inside your component.\n\n#### `capture(): Promise`\n"}},[300]);